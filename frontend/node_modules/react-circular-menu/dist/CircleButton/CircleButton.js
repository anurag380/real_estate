var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import Tooltip from '@material-ui/core/Tooltip/Tooltip';
import { StyledButton, StyledLink } from './StyledCircleButton';
import { buttonA11yProps } from '../helpers/buttonA11yProps';
;
export var CircleButton = function (props) {
    var link = props.link, target = props.target, tooltip = props.tooltip, tooltipPlacement = props.tooltipPlacement, onClick = props.onClick, className = props.className, size = props.size, style = props.style, children = props.children;
    var commonProps = { className: className, size: size, style: style };
    return (React.createElement(Tooltip, { title: tooltip !== null && tooltip !== void 0 ? tooltip : '', placement: tooltipPlacement }, link
        ? React.createElement(StyledLink, __assign({}, commonProps, { href: link, target: target }), children)
        : React.createElement(StyledButton, __assign({}, commonProps, { onClick: onClick }, (onClick && buttonA11yProps(onClick))), children)));
};
